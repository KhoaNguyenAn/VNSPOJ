#include <iostream>
#include <bits/stdc++.h>
#include <algorithm>
#define ll long long
using namespace std;
const int N = 25;
int f[24][1],k,p;
int A[24][24] =
{
    {0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0},
    {0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0},
    {0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0},
    {0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
    {0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
    {0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
    {0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0},
    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1},
    {1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1},
    {0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0},
    {0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0},
    {0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
};
int I[24][24] =
{
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1}
};
struct ds
{
    ll d[N][N];
    int n1,m1;
    ds() {memset(d,0,sizeof(d));};
};
ds ans,cur,ok;
ds operator* (ds A1, ds B1)
{
    ds C;
    C.m1 = B1.m1;
    C.n1 = A1.n1;
    for (int i = 0; i < C.n1; i++)
      for (int j = 0; j < C.m1; j++)
        {
            C.d[i][j] = 0;
            for (int k = 0; k <= A1.m1; k++)
              C.d[i][j] = (C.d[i][j] + (A1.d[i][k]*B1.d[k][j]) % p) % p;
        }
    return C;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    char v1,v2;
    cin >> v1 >> v2 >> k >> p;
    memset(f,0,sizeof(f));
    if (v1 == 'A')
    {
        f[0][0] = 1;
        f[10][0] = 1;
        f[16][0] = 1;
    }
    if (v1 == 'B')
    {
        f[11][0] = 1;
        f[12][0] = 1;
        f[9][0] = 1;
    }
    if (v1 == 'C')
    {
        f[15][0] = 1;
        f[13][0] = 1;
        f[22][0] = 1;
    }
    if (v1 == 'D')
    {
        f[2][0] = 1;
        f[1][0] = 1;
        f[14][0] = 1;
    }
    if (v1 == 'E')
    {
        f[17][0] = 1;
        f[19][0] = 1;
        f[20][0] = 1;
    }
    if (v1 == 'F')
    {
        f[8][0] = 1;
        f[7][0] = 1;
        f[21][0] = 1;
    }
    if (v1 == 'G')
    {
        f[23][0] = 1;
        f[5][0] = 1;
        f[6][0] = 1;
    }
    if (v1 == 'H')
    {
        f[3][0] = 1;
        f[18][0] = 1;
        f[4][0] = 1;
    }
    for (int i = 0; i < 24; i++)
    for (int j = 0; j < 24; j++)
    {
        ans.d[i][j] = I[i][j];
        cur.d[i][j] = A[i][j];
    }
    for (int i = 0; i < 24; i++)
    for (int j = 0; j < 1; j++) ok.d[i][j] = f[i][j];
    ans.m1 = 24;
    ans.n1 = 24;
    cur.m1 = 24;
    cur.n1 = 24;
    ok.m1 = 1;
    ok.n1 = 24;
    k--;
    while (k > 0)
    {
        if (k & 1) // khong chia het cho 2
          ans = ans*cur;
        cur = cur*cur;
        k >>= 1;
    }
    ds res = ans * ok;
    if (v2 == 'A')
    {
      cout << (res.d[1][0] + res.d[17][0] + res.d[11][0]) % p;
      return 0;
    }
    if (v2 == 'B')
    {
      cout << (res.d[10][0] + res.d[13][0] + res.d[8][0]) % p;
      return 0;
    }
    if (v2 == 'C')
    {
      cout << (res.d[14][0] + res.d[12][0] + res.d[23][0]) % p;
      return 0;
    }
    if (v2 == 'D')
    {
      cout << (res.d[0][0] + res.d[15][0] + res.d[3][0]) % p;
      return 0;
    }
    if (v2 == 'E')
    {
      cout << (res.d[16][0] + res.d[18][0] + res.d[21][0]) % p;
      return 0;
    }
    if (v2 == 'F')
    {
      cout << (res.d[20][0] + res.d[6][0] + res.d[9][0]) % p;
      return 0;
    }
    if (v2 == 'G')
    {
      cout << (res.d[22][0] + res.d[4][0] + res.d[7][0]) % p;
      return 0;
    }
    if (v2 == 'H')
    {
      cout << (res.d[2][0] + res.d[5][0] + res.d[19][0]) % p;
      return 0;
    }
    return 0;
}
